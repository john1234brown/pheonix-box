/*! For license information please see pheonixBox.js.LICENSE.txt */
(()=>{"use strict";var e={"./src/char.ts":(e,s)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.generateSafeUtf8Characters=function(e){const s=["\\","`","$","","ï¿½","\b","\f","\n","\r","\t","\v","\0","'",'"',"\u2028","\u2029","\ud800-\udfff","ï¿¾","ï¿¿"],t=[];for(let e=32;e<1114111;e++){if(e>=55296&&e<=57343)continue;if(e>=127&&e<=159)continue;const i=String.fromCodePoint(e);!s.includes(i)&&i.trim().length>0&&t.push(i)}const i=t.filter((e=>e.charCodeAt(0)<=69631));for(let s=0;s<e;s++)i.push("  ");return console.log("safeCharacters:",i.join("").length),i},s.generateSafeUtf8CharactersForAES=function(e){const s=["\\","`","$","","ï¿½","\b","\f","\n","\r","\t","\v","\0","'",'"',"\u2028","\u2029","\ud800-\udfff","ï¿¾","ï¿¿"],t=[];for(let e=32;e<1114111;e++){if(e>=55296&&e<=57343)continue;if(e>=127&&e<=159)continue;const i=String.fromCodePoint(e);!s.includes(i)&&i.trim().length>0&&t.push(i)}for(let s=0;s<e;s++);const i=t.filter((e=>e.charCodeAt(0)<=4095));for(let s=0;s<e;s++)i.push("  ");return console.log("aesSafeCharacters:",i.join("").length),i}},"./src/cli.ts":function(e,s,t){var i=this&&this.__awaiter||function(e,s,t,i){return new(t||(t=Promise))((function(o,r){function n(e){try{l(i.next(e))}catch(e){r(e)}}function a(e){try{l(i.throw(e))}catch(e){r(e)}}function l(e){var s;e.done?o(e.value):(s=e.value,s instanceof t?s:new t((function(e){e(s)}))).then(n,a)}l((i=i.apply(e,s||[])).next())}))},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.clusterLock=void 0;const r=t("./src/config.ts"),n=t("./src/main.ts"),a=o(t("cluster")),l=o(t("./src/worker.ts"));s.clusterLock={clusterLock:!1},a.default.isWorker&&(console.log(`Worker ${process.pid} is running`),s.clusterLock.clusterLock=!0,process.on("message",(e=>i(void 0,void 0,void 0,(function*(){if("start"===e.type){console.log("Starting worker process...");const{chunk:s,config:t,cipherKey:i,shuffledKey:o,aesKey:r,loaded:n,fileHashes:a,fileContents:f}=e,c=new l.default(t,s,{},i,o,r||Buffer.alloc(0),n,a,f);for(;;){const e=yield c.processFiles(s,{});process.send&&process.send({type:"result",fileHashes:e.fileHashes,fileContents:e.fileContents}),yield new Promise((e=>setTimeout(e,t.forkExecutionDelay||1e3)))}}})))));const f=process.argv.slice(2);(f.length<1||"help"===f[0])&&(u(),process.exit(1));const c=f[0],h=f[1];switch(c){case"config":!function(e,s){const t=new r.Config;switch(e){case"addPath":t.addPath(s[0]);break;case"removePath":t.removePath(s[0]);break;case"addFileType":t.addFileType(s[0]);break;case"removeFileType":t.removeFileType(s[0]);break;case"addFileRegex":t.addFileRegex(s[0]);break;case"removeFileRegex":t.removeFileRegex(s[0]);break;case"setUseFileTypes":t.useFileTypes="true"===s[0],t.saveConfigP(),console.log(`useFileTypes set to ${s[0]}`);break;case"setUseFileRegexs":t.useFileRegexs="true"===s[0],t.saveConfigP(),console.log(`useFileRegexs set to ${s[0]}`);break;case"setUseCeaserCipher":t.useCeaserCipher="true"===s[0],t.saveConfigP(),console.log(`useCeaserCipher set to ${s[0]}`);break;case"setUseAesKey":t.useAesKey="true"===s[0],t.saveConfigP(),console.log(`useAesKey set to ${s[0]}`);break;case"setThreads":t.threads=parseInt(s[0],10),t.saveConfigP(),console.log(`threads set to ${s[0]}`);break;case"setDebug":t.debug="true"===s[0],t.saveConfigP(),console.log(`debug set to ${s[0]}`);break;case"setWhiteSpaceOffset":t.whiteSpaceOffset=parseInt(s[0],10),t.saveConfigP(),console.log(`whiteSpaceOffset set to ${s[0]}`);break;case"addExcludePath":t.addExcludePath(s[0]);break;case"removeExcludePath":t.removeExcludePath(s[0]);break;case"setForkDelay":t.forkDelay=parseInt(s[0],10),t.saveConfigP(),console.log(`forkDelay set to ${s[0]}`);break;case"setForkExecutionDelay":t.forkExecutionDelay=parseInt(s[0],10),t.saveConfigP(),console.log(`forkExecutionDelay set to ${s[0]}`);break;case"setLocalPathReferences":t.localPathReferences="true"===s[0],t.saveConfigP(),console.log(`localPathReferences set to ${s[0]}`);break;case"setSelfTamperProof":t.selfTamperProof="true"===s[0],t.saveConfigP(),console.log(`selfTamperProof set to ${s[0]}`);break;case"setSelfNpmTamperProof":t.selfNpmTamperProof="true"===s[0],t.saveConfigP(),console.log(`selfNpmTamperProof set to ${s[0]}`);break;default:console.error("Unknown config action"),u(),process.exit(1)}process.exit(0)}(h,f.slice(2));break;case"start":!1===s.clusterLock.clusterLock&&(new n.JohnsPheonixBox).startProcess();break;default:console.error("Unknown command"),u(),process.exit(1)}function u(){console.log("Usage: ./pheonixBox <command> <action> [options]"),console.log("Commands:"),console.log("  start                      Start the Pheonix process"),console.log("  config <action> [options]  Configure the Pheonix settings"),console.log("  help                       Display this help message"),console.log("Config Actions:"),console.log("  addPath <path>             Add a path to the configuration"),console.log("  removePath <path>          Remove a path from the configuration"),console.log("  addExcludePath <path>      Add a path to the exclude paths"),console.log("  removeExcludePath <path>   Remove a path from the exclude paths"),console.log("  addFileType <type>         Add a file type to the configuration"),console.log("  removeFileType <type>      Remove a file type from the configuration"),console.log("  addFileRegex <regex>       Add a file regex to the configuration"),console.log("  removeFileRegex <regex>    Remove a file regex from the configuration"),console.log("  setUseFileTypes <true|false> Set whether to use file types"),console.log("  setUseFileRegexs <true|false> Set whether to use file regexs"),console.log("  setUseCeaserCipher <true|false> Set whether to use Ceaser Cipher"),console.log("  setUseAesKey <true|false>  Set whether to use AES Key"),console.log("  setThreads <number>        Set the number of threads"),console.log("  setWhiteSpaceOffset <number> Set the white space offset"),console.log("  setForkDelay <number>      Set the fork delay"),console.log("  setForkExecutionDelay <number> Set the fork execution delay"),console.log("  setDebug <true|false>      Set the debug mode"),console.log("  setLocalPathReferences <true|false> Set whether to use local path references"),console.log("  setSelfTamperProof <true|false> Set whether to use self tamper proof"),console.log("  setSelfNpmTamperProof <true|false> Set whether to use self npm tamper proof")}s.default=n.JohnsPheonixBox},"./src/config.ts":function(e,s,t){var i=this&&this.__createBinding||(Object.create?function(e,s,t,i){void 0===i&&(i=t);var o=Object.getOwnPropertyDescriptor(s,t);o&&!("get"in o?!s.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return s[t]}}),Object.defineProperty(e,i,o)}:function(e,s,t,i){void 0===i&&(i=t),e[i]=s[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,s){Object.defineProperty(e,"default",{enumerable:!0,value:s})}:function(e,s){e.default=s}),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var s={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&i(s,e,t);return o(s,e),s};Object.defineProperty(s,"__esModule",{value:!0}),s.Config=void 0;const n=r(t("fs"));s.Config=class{constructor(e){this.configFilePath="configurable.json",this.config={paths:[],excludePaths:[],fileTypes:[],fileRegexs:[],forkDelay:1,forkExecutionDelay:1,threads:1,useFileTypes:!1,useFileRegexs:!1,useCeaserCipher:!1,useAesKey:!1,debug:!1,whiteSpaceOffset:0,localPathReferences:!1,selfTamperProof:!1,selfNpmTamperProof:!1},e&&this.validateConfig(e)?this.config=e:this.loadConfig(),this.paths=this.config.paths,this.excludePaths=this.config.excludePaths,this.fileTypes=this.config.fileTypes,this.fileRegexs=this.config.fileRegexs,this.useFileRegexs=this.config.useFileRegexs,this.useFileTypes=this.config.useFileTypes,this.useCeaserCipher=this.config.useCeaserCipher,this.useAesKey=this.config.useAesKey,this.forkDelay=this.config.forkDelay,this.forkExecutionDelay=this.config.forkExecutionDelay,this.threads=this.config.threads,this.debug=this.config.debug,this.whiteSpaceOffset=this.config.whiteSpaceOffset,this.localPathReferences=this.config.localPathReferences,this.selfTamperProof=this.config.selfTamperProof,this.selfNpmTamperProof=this.config.selfNpmTamperProof}log(e){this.debug&&console.log(e)}saveConfig(){this.validateConfig(this.config)?(n.writeFileSync(this.configFilePath,JSON.stringify(this.config,null,2)),this.log("Configuration saved successfully.")):console.error("Invalid configuration. Save aborted.")}validateConfig(e){return!!(Array.isArray(e.paths)&&Array.isArray(e.excludePaths)&&Array.isArray(e.fileTypes)&&Array.isArray(e.fileRegexs)&&"boolean"==typeof e.useFileTypes&&"boolean"==typeof e.useFileRegexs&&"boolean"==typeof e.useCeaserCipher&&"boolean"==typeof e.useAesKey&&"number"==typeof e.forkDelay&&"number"==typeof e.forkExecutionDelay&&"number"==typeof e.threads&&"boolean"==typeof e.debug&&"number"==typeof e.whiteSpaceOffset&&"boolean"==typeof e.localPathReferences&&"boolean"==typeof e.selfTamperProof&&"boolean"==typeof e.selfNpmTamperProof)}loadConfig(){if(n.existsSync(this.configFilePath)){const e=JSON.parse(n.readFileSync(this.configFilePath,"utf-8"));this.validateConfig(e)?(this.config=e,this.log("Configuration loaded successfully.")):(console.error("Invalid configuration file. Loading defaults."),this.config={paths:[],excludePaths:[],fileTypes:[],fileRegexs:[],useFileTypes:!1,useFileRegexs:!1,useCeaserCipher:!1,useAesKey:!1,debug:!1,forkDelay:1,forkExecutionDelay:1,threads:1,whiteSpaceOffset:0,localPathReferences:!1,selfTamperProof:!1,selfNpmTamperProof:!1})}else this.config={paths:[],excludePaths:[],fileTypes:[],fileRegexs:[],useFileTypes:!1,useFileRegexs:!1,useCeaserCipher:!1,useAesKey:!1,debug:!1,forkDelay:1,forkExecutionDelay:1,threads:1,whiteSpaceOffset:0,localPathReferences:!1,selfTamperProof:!1,selfNpmTamperProof:!1}}saveConfigP(){const e={paths:this.paths,excludePaths:this.excludePaths,fileTypes:this.fileTypes,fileRegexs:this.fileRegexs,useFileTypes:this.useFileTypes,useFileRegexs:this.useFileRegexs,useCeaserCipher:this.useCeaserCipher,useAesKey:this.useAesKey,forkDelay:this.forkDelay,forkExecutionDelay:this.forkExecutionDelay,threads:this.threads,debug:this.debug,whiteSpaceOffset:this.whiteSpaceOffset,localPathReferences:this.localPathReferences,selfTamperProof:this.selfTamperProof,selfNpmTamperProof:this.selfNpmTamperProof};this.validateConfig(e)?(this.config=e,this.saveConfig()):console.error("Invalid configuration. Save aborted.")}addPath(e){this.config.paths.includes(e)||(this.config.paths.push(e),this.saveConfig(),this.log(`Path ${e} added to configuration.`))}removePath(e){const s=this.config.paths.indexOf(e);s>-1&&(this.config.paths.splice(s,1),this.saveConfig(),this.log(`Path ${e} removed from configuration.`))}addExcludePath(e){this.config.excludePaths.includes(e)||(this.config.excludePaths.push(e),this.saveConfig(),this.log(`Exclude path ${e} added to configuration.`))}removeExcludePath(e){const s=this.config.excludePaths.indexOf(e);s>-1&&(this.config.excludePaths.splice(s,1),this.saveConfig(),this.log(`Exclude path ${e} removed from configuration.`))}addFileType(e){this.config.fileTypes.includes(e)||(this.config.fileTypes.push(e),this.saveConfig(),this.log(`File type ${e} added to configuration.`))}removeFileType(e){const s=this.config.fileTypes.indexOf(e);s>-1&&(this.config.fileTypes.splice(s,1),this.saveConfig(),this.log(`File type ${e} removed from configuration.`))}addFileRegex(e){this.config.fileRegexs.includes(e)||(this.config.fileRegexs.push(e),this.saveConfig(),this.log(`File regex ${e} added to configuration.`))}removeFileRegex(e){const s=this.config.fileRegexs.indexOf(e);s>-1&&(this.config.fileRegexs.splice(s,1),this.saveConfig(),this.log(`File regex ${e} removed from configuration.`))}}},"./src/main.ts":function(e,s,t){var i=this&&this.__createBinding||(Object.create?function(e,s,t,i){void 0===i&&(i=t);var o=Object.getOwnPropertyDescriptor(s,t);o&&!("get"in o?!s.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return s[t]}}),Object.defineProperty(e,i,o)}:function(e,s,t,i){void 0===i&&(i=t),e[i]=s[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,s){Object.defineProperty(e,"default",{enumerable:!0,value:s})}:function(e,s){e.default=s}),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var s={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&i(s,e,t);return o(s,e),s},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(s,"__esModule",{value:!0}),s.JohnsPheonixBox=void 0;const a=t("./src/config.ts"),l=r(t("crypto")),f=r(t("fs")),c=r(t("path")),h=r(t("node:sea")),u=t("./src/char.ts"),g=n(t("cluster")),d=r(t("os")),p=t("./src/cli.ts"),y=c.join(process.cwd(),"pheonixBoxState.json");s.JohnsPheonixBox=class{constructor(e=!1,s=""){this.fileHashes={},this.fileContents={},this.cipherKey="",this.shuffledKey="",this.safeAsciiCharacters=[],this.aesKey=null,this.loaded=!1,e&&s?this.config=this.loadConfigFromSeaAsset(s):(this.config=new a.Config,this.config.saveConfigP(),this.loadState()),this.log("Initializing JohnsPheonixBox..."),console.log("This loaded:",this.loaded),!1===this.loaded&&(this.safeAsciiCharacters=(0,u.generateSafeUtf8Characters)(this.config.whiteSpaceOffset),this.config.useAesKey&&(this.safeAsciiCharacters=(0,u.generateSafeUtf8CharactersForAES)(this.config.whiteSpaceOffset)),this.cipherKey=this.generateCipherKey(),this.shuffledKey=this.cipherKey,this.config.useAesKey&&(this.aesKey=l.randomBytes(32))),process.on("exit",(e=>{369!==e&&!1===p.clusterLock.clusterLock&&this.saveState()})),process.on("SIGINT",(()=>{!1===p.clusterLock.clusterLock&&this.saveState(),process.exit(369)})),this.log("JohnsPheonixBox initialized with config:",this.config)}log(...e){this.config.debug&&console.log(...e)}loadConfigFromSeaAsset(e){console.log("Loading config from sea asset:",e);const s=h.getAsset(e),t=Buffer.from(s.toString()).toString("utf8");return console.log("Loaded config from sea asset:",t),JSON.parse(t)}loadState(){if(console.log("Loading state from file:",y),f.existsSync(y)){const e=JSON.parse(f.readFileSync(y,"utf-8"));this.cipherKey=e.cipherKey,this.shuffledKey=e.shuffledKey,this.fileHashes=e.fileHashes,this.fileContents=e.fileContents,this.config.useAesKey&&e.aesKey&&(this.aesKey=Buffer.from(e.aesKey,"hex")),f.unlinkSync(y),this.log("Loaded state:",e),this.loaded=!0}}saveState(){this.log("Saving state to file:",y);const e={cipherKey:this.cipherKey,shuffledKey:this.shuffledKey,fileHashes:this.fileHashes,fileContents:this.fileContents};this.config.useAesKey&&this.aesKey&&(e.aesKey=this.aesKey.toString("hex")),f.writeFileSync(y,JSON.stringify(e),"utf-8"),this.log("Saved state:",e)}startProcess(){if(g.default.isPrimary){let e=d.cpus().length;e>this.config.threads&&(e=this.config.threads);const s=this.getFileList(),t=Math.ceil(s.length/e);this.log(`Master ${process.pid} is running, using ${e} threads with chunk size ${t}`);let i=0;const o=()=>{if(i<e){const e=s.slice(i*t,(i+1)*t),r=g.default.fork();r.on("message",(e=>{"result"===e.type&&(this.log(`Master received result from worker ${r.process.pid}`),Object.assign(this.fileHashes,e.fileHashes),Object.assign(this.fileContents,e.fileContents))})),r.send({type:"start",chunk:e,config:this.config,cipherKey:this.cipherKey,shuffledKey:this.shuffledKey,aesKey:this.aesKey,loaded:this.loaded,fileHashes:this.fileHashes,fileContents:this.fileContents}),i++,setTimeout(o,this.config.forkDelay||100)}};for(;i<e;)o();g.default.on("exit",((e,s,t)=>{this.log(`Worker ${e.process.pid} died`),i-=1}))}}getFileList(){this.log("Generating file list...");const e=[],s=this.config.excludePaths||[];if(this.config.paths.forEach((t=>{this.config.localPathReferences&&(t=c.join(__dirname,t)),f.existsSync(t)&&(f.statSync(t).isDirectory()?f.readdirSync(t).forEach((i=>{const o=c.join(t,i);s.includes(o)||e.push(o)})):s.includes(t)||e.push(t))})),this.config.selfTamperProof&&(f.existsSync(c.join(__dirname,__filename))?e.push(c.join(__dirname,__filename)):f.existsSync(c.join(process.cwd(),__filename))&&e.push(c.join(process.cwd(),__filename))),this.config.selfNpmTamperProof){e.push(__dirname);const s=c.join(__dirname,"node_modules");f.existsSync(s)&&e.push(s)}return this.log("Generated file list:",e),e}generateCipherKey(){this.log("Generating cipher key...");const e=this.safeAsciiCharacters,s=this.shuffleKeys(e);for(let e=s.length-1;e>0;e--){const t=l.randomInt(0,e+1);[s[e],s[t]]=[s[t],s[e]]}return s.join("")}shuffleKeys(e){this.log("Shuffling key...");for(let s=e.length-1;s>0;s--){const t=l.randomInt(0,s+1);[e[s],e[t]]=[e[t],e[s]]}return e}shuffleKey(e){this.log("Shuffling key...");const s=e.split("");for(let e=s.length-1;e>0;e--){const t=l.randomInt(0,e+1);[s[e],s[t]]=[s[t],s[e]]}return s.join("")}}},"./src/worker.ts":function(e,s,t){var i=this&&this.__createBinding||(Object.create?function(e,s,t,i){void 0===i&&(i=t);var o=Object.getOwnPropertyDescriptor(s,t);o&&!("get"in o?!s.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return s[t]}}),Object.defineProperty(e,i,o)}:function(e,s,t,i){void 0===i&&(i=t),e[i]=s[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,s){Object.defineProperty(e,"default",{enumerable:!0,value:s})}:function(e,s){e.default=s}),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var s={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&i(s,e,t);return o(s,e),s};Object.defineProperty(s,"__esModule",{value:!0});const n=r(t("fs")),a=r(t("crypto")),l=r(t("path"));s.default=class{constructor(e,s,t,i,o,r,n,a,l){this.config=e,this.loaded=n,this.fileHashes=a||{},this.fileContents=l||{},this.cipherKey=i,this.shuffledKey=o,this.aesKey=r,this.processFiles(s,t)}log(...e){this.config.debug&&console.log(...e)}encrypt(e){this.log("Encrypting text...");const s=e.split("").map((e=>{const s=this.cipherKey.indexOf(e);return-1===s?e:this.shuffledKey[s]})).join("");if(this.config.useAesKey&&this.aesKey){const e=a.randomBytes(16),t=a.createCipheriv("aes-256-cbc",Buffer.from(this.aesKey),e);let i=t.update(s,"utf8","hex");i+=t.final("hex");const o=e.toString("hex")+":"+i;return this.log("Encrypted text with AES:",o),o}return this.log("Encrypted text with Caesar cipher:",s),s}decrypt(e){this.log("Decrypting text...");let s=e;if(this.config.useAesKey&&this.aesKey){const t=e.split(":");if(t.length<2)throw new Error("Invalid encrypted text format");const i=Buffer.from(t.shift(),"hex");if(16!==i.length)throw new Error("Invalid initialization vector length");const o=t.join(":"),r=this.config.useCeaserCipher?Buffer.from(this.aesKey):this.aesKey,n=a.createDecipheriv("aes-256-cbc",r,i);s=n.update(o,"hex","utf8"),s+=n.final("utf8")}const t=s.split("").map((e=>{const s=this.shuffledKey.indexOf(e);return-1===s?e:this.cipherKey[s]})).join("");return this.log("Decrypted text with Caesar cipher:",t),t}processFiles(e,s){return new Promise(((t,i)=>{try{this.log("Processing files..."),e.forEach((e=>{this.processFile(e,s)})),t({fileHashes:this.fileHashes,fileContents:this.fileContents})}catch(e){i(e)}}))}processFile(e,s){if(this.log("Processing file:",e),this.shouldProcessFile(e)){const s=n.readFileSync(e,"utf-8"),t=a.createHash("sha256").update(s).digest("hex");if(void 0!==this.fileHashes[e]&&void 0!==this.fileContents[e]){const i=this.config.useCeaserCipher?this.decrypt(this.fileHashes[e]):this.fileHashes[e],o=this.config.useCeaserCipher?this.decrypt(this.fileContents[e]):this.fileContents[e];i?i!==t&&(this.log(`File hash mismatch for ${e}. Replacing content with stored content. , ${o} \n, ${s}`),n.writeFileSync(e,o,"utf-8")):(this.fileHashes[e]=this.config.useCeaserCipher?this.encrypt(t):t,this.fileContents[e]=this.config.useCeaserCipher?this.encrypt(s):s)}else this.fileHashes[e]=this.config.useCeaserCipher?this.encrypt(t):t,this.fileContents[e]=this.config.useCeaserCipher?this.encrypt(s):s}}shouldProcessFile(e){var s,t,i;if(this.log("Checking if file should be processed:",e),null===(s=this.config.excludePaths)||void 0===s?void 0:s.some((s=>e.startsWith(s))))return this.log(`File ${e} is excluded from processing.`),!1;if(this.config.useFileTypes){const s=l.extname(e);if(!(null===(t=this.config.fileTypes)||void 0===t?void 0:t.includes(s)))return!1}if(this.config.useFileRegexs){const s=l.basename(e);if(!(null===(i=this.config.fileRegexs)||void 0===i?void 0:i.some((e=>new RegExp(e).test(s)))))return!1}return!0}terminate(){console.log("Worker terminating..."),process.exit(0),console.log("Worker terminated")}}},cluster:e=>{e.exports=require("cluster")},crypto:e=>{e.exports=require("crypto")},fs:e=>{e.exports=require("fs")},"node:sea":e=>{e.exports=require("node:sea")},os:e=>{e.exports=require("os")},path:e=>{e.exports=require("path")}},s={};!function t(i){var o=s[i];if(void 0!==o)return o.exports;var r=s[i]={exports:{}};return e[i].call(r.exports,r,r.exports,t),r.exports}("./src/cli.ts")})();
//# sourceMappingURL=pheonixBox.js.map