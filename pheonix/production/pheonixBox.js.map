{"version":3,"file":"pheonixBox.js","mappings":"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","sources":["webpack://pheonix-box-cli/./src/char.ts","webpack://pheonix-box-cli/./src/cli.ts","webpack://pheonix-box-cli/./src/config.ts","webpack://pheonix-box-cli/./src/main.ts","webpack://pheonix-box-cli/./src/worker.ts","webpack://pheonix-box-cli/external node-commonjs \"cluster\"","webpack://pheonix-box-cli/external node-commonjs \"crypto\"","webpack://pheonix-box-cli/external node-commonjs \"fs\"","webpack://pheonix-box-cli/external node-commonjs \"node:sea\"","webpack://pheonix-box-cli/external node-commonjs \"os\"","webpack://pheonix-box-cli/external node-commonjs \"path\"","webpack://pheonix-box-cli/webpack/bootstrap","webpack://pheonix-box-cli/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateSafeUtf8Characters = generateSafeUtf8Characters;\nexports.generateSafeUtf8CharactersForAES = generateSafeUtf8CharactersForAES;\n/************************************************************************************************************************\n * Author: Johnathan Edward Brown                                                                                       *\n * Purpose: Generate safe UTF-8 characters for use in the PheonixBox Class Object for the CLI Pheonix application.      *\n * Last Modified: 2024-10-14                                                                                            *\n * License: X11 License                                                                                                 *\n * Version: 1.0.0                                                                                                       *\n ************************************************************************************************************************/\nfunction generateSafeUtf8Characters(count) {\n    const excludedCharacters = [\n        '\\\\', '`', '$', '\\x1B', '\\uFFFD', '\\b', '\\f', '\\n', '\\r', '\\t', '\\v', '\\0',\n        '\\'', '\\\"', '\\u2028', '\\u2029', '\\uD800-\\uDFFF', '\\uFFFE', '\\uFFFF'\n    ]; // Add more exclusions as needed\n    const safeCharacters = [];\n    for (let i = 32; i < 0x10FFFF; i++) { // UTF-8 characters range from 32 to 0x10FFFF\n        if (i >= 0xD800 && i <= 0xDFFF)\n            continue; // Skip surrogate pairs\n        if (i >= 0x7F && i <= 0x9F)\n            continue; // Skip C1 control characters\n        const char = String.fromCodePoint(i);\n        if (!excludedCharacters.includes(char) && char.trim().length > 0) {\n            safeCharacters.push(char);\n        }\n    }\n    const aesSafeCharacters = safeCharacters.filter(char => char.charCodeAt(0) <= 0x10FFF); //This ensure safe utf-8 characters are within the byte range of format!\n    for (let i = 0; i < count; i++) {\n        aesSafeCharacters.push('  ');\n    }\n    //    console.log('safeCharacters:', safeCharacters.join(''));\n    console.log('safeCharacters:', aesSafeCharacters.join('').length);\n    return aesSafeCharacters;\n}\nfunction generateSafeUtf8CharactersForAES(count) {\n    const excludedCharacters = [\n        '\\\\', '`', '$', '\\x1B', '\\uFFFD', '\\b', '\\f', '\\n', '\\r', '\\t', '\\v', '\\0',\n        '\\'', '\\\"', '\\u2028', '\\u2029', '\\uD800-\\uDFFF', '\\uFFFE', '\\uFFFF'\n    ]; // Add more exclusions as needed\n    const safeCharacters = [];\n    for (let i = 32; i < 0x10FFFF; i++) { // UTF-8 characters range from 32 to 0x10FFFF\n        if (i >= 0xD800 && i <= 0xDFFF)\n            continue; // Skip surrogate pairs\n        if (i >= 0x7F && i <= 0x9F)\n            continue; // Skip C1 control characters\n        const char = String.fromCodePoint(i);\n        if (!excludedCharacters.includes(char) && char.trim().length > 0) {\n            safeCharacters.push(char);\n        }\n    }\n    for (let i = 0; i < count; i++) {\n        //safeCharacters.push('  ');\n    }\n    // AES encryption typically works with bytes, so we need to ensure the characters are within the byte range\n    const aesSafeCharacters = safeCharacters.filter(char => char.charCodeAt(0) <= 0xFFF); //This ensure safe AES characters are within the byte range of format!\n    for (let i = 0; i < count; i++) {\n        aesSafeCharacters.push('  ');\n    }\n    //    console.log('aesSafeCharacters:', aesSafeCharacters.join(''));\n    console.log('aesSafeCharacters:', aesSafeCharacters.join('').length);\n    return aesSafeCharacters;\n}\n//console.log(generateSafeUtf8Characters(32)); //Generate with random off spaces of white spaces!\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clusterLock = void 0;\n/************************************************************************************************************************\n * Author: Johnathan Edward Brown                                                                                       *\n * Purpose: CLI with worker thread entry point for the PheonixBox Class Object for the CLI Pheonix application.         *\n * Last Modified: 2024-10-14                                                                                            *\n * License: X11 License                                                                                                 *\n * Version: 1.0.0                                                                                                       *\n ************************************************************************************************************************/\nconst config_1 = require(\"./config\");\nconst main_1 = require(\"./main\");\nconst cluster_1 = __importDefault(require(\"cluster\"));\nconst worker_1 = __importDefault(require(\"./worker\"));\nexports.clusterLock = { clusterLock: false };\nif (cluster_1.default.isWorker) {\n    // If this is a worker process, do nothing and return early\n    console.log(`Worker ${process.pid} is running`);\n    exports.clusterLock.clusterLock = true;\n    process.on('message', (message) => __awaiter(void 0, void 0, void 0, function* () {\n        const msg = message;\n        if (msg.type === 'start') {\n            console.log('Starting worker process...');\n            const { chunk, config, cipherKey, shuffledKey, aesKey, loaded, fileHashes, fileContents } = message;\n            const worker = new worker_1.default(config, chunk, {}, cipherKey, shuffledKey, aesKey || Buffer.alloc(0), loaded, fileHashes, fileContents);\n            while (true) {\n                const result = yield worker.processFiles(chunk, {});\n                if (process.send)\n                    process.send({ type: 'result', fileHashes: result.fileHashes, fileContents: result.fileContents });\n                yield new Promise(resolve => setTimeout(resolve, config.forkExecutionDelay || 1000)); // Add a configurable delay between executions\n            }\n        }\n    }));\n}\nconst args = process.argv.slice(2);\nif (args.length < 1 || args[0] === 'help') {\n    if (exports.clusterLock.clusterLock === false) {\n        displayHelp();\n        process.exit(1);\n    }\n}\nconst command = args[0];\nconst action = args[1];\nswitch (command) {\n    case 'config':\n        handleConfig(action, args.slice(2));\n        break;\n    case 'start':\n        if (exports.clusterLock.clusterLock === false) {\n            const johnsPheonixBox = new main_1.JohnsPheonixBox();\n            johnsPheonixBox.startProcess(); //Prevent dual executions from cluster modules!\n        }\n        break;\n    default:\n        if (exports.clusterLock.clusterLock === false) {\n            console.error('Unknown command');\n            displayHelp();\n            process.exit(1);\n        }\n        break;\n}\nfunction handleConfig(action, options) {\n    const config = new config_1.Config();\n    switch (action) {\n        case 'addPath':\n            config.addPath(options[0]);\n            break;\n        case 'removePath':\n            config.removePath(options[0]);\n            break;\n        case 'addFileType':\n            config.addFileType(options[0]);\n            break;\n        case 'removeFileType':\n            config.removeFileType(options[0]);\n            break;\n        case 'addFileRegex':\n            config.addFileRegex(options[0]);\n            break;\n        case 'removeFileRegex':\n            config.removeFileRegex(options[0]);\n            break;\n        case 'setUseFileTypes':\n            config.useFileTypes = options[0] === 'true';\n            config.saveConfigP();\n            console.log(`useFileTypes set to ${options[0]}`);\n            break;\n        case 'setUseFileRegexs':\n            config.useFileRegexs = options[0] === 'true';\n            config.saveConfigP();\n            console.log(`useFileRegexs set to ${options[0]}`);\n            break;\n        case 'setUseCeaserCipher':\n            config.useCeaserCipher = options[0] === 'true';\n            config.saveConfigP();\n            console.log(`useCeaserCipher set to ${options[0]}`);\n            break;\n        case 'setUseAesKey':\n            config.useAesKey = options[0] === 'true';\n            config.saveConfigP();\n            console.log(`useAesKey set to ${options[0]}`);\n            break;\n        case 'setThreads':\n            config.threads = parseInt(options[0], 10);\n            config.saveConfigP();\n            console.log(`threads set to ${options[0]}`);\n            break;\n        case 'setDebug':\n            config.debug = options[0] === 'true';\n            config.saveConfigP();\n            console.log(`debug set to ${options[0]}`);\n            break;\n        case 'setWhiteSpaceOffset':\n            config.whiteSpaceOffset = parseInt(options[0], 10);\n            config.saveConfigP();\n            console.log(`whiteSpaceOffset set to ${options[0]}`);\n            break;\n        case 'addExcludePath':\n            config.addExcludePath(options[0]);\n            break;\n        case 'removeExcludePath':\n            config.removeExcludePath(options[0]);\n            break;\n        case 'setForkDelay':\n            config.forkDelay = parseInt(options[0], 10);\n            config.saveConfigP();\n            console.log(`forkDelay set to ${options[0]}`);\n            break;\n        case 'setForkExecutionDelay':\n            config.forkExecutionDelay = parseInt(options[0], 10);\n            config.saveConfigP();\n            console.log(`forkExecutionDelay set to ${options[0]}`);\n            break;\n        case 'setLocalPathReferences':\n            config.localPathReferences = options[0] === 'true';\n            config.saveConfigP();\n            console.log(`localPathReferences set to ${options[0]}`);\n            break;\n        case 'setSelfTamperProof':\n            config.selfTamperProof = options[0] === 'true';\n            config.saveConfigP();\n            console.log(`selfTamperProof set to ${options[0]}`);\n            break;\n        case 'setSelfNpmTamperProof':\n            config.selfNpmTamperProof = options[0] === 'true';\n            config.saveConfigP();\n            console.log(`selfNpmTamperProof set to ${options[0]}`);\n            break;\n        default:\n            if (exports.clusterLock.clusterLock === false) {\n                console.error('Unknown config action');\n                displayHelp();\n                process.exit(1);\n            }\n    }\n    if (exports.clusterLock.clusterLock === false)\n        process.exit(0);\n}\nfunction displayHelp() {\n    console.log('Usage: ./pheonixBox <command> <action> [options]');\n    console.log('Commands:');\n    console.log('  start                      Start the Pheonix process');\n    console.log('  config <action> [options]  Configure the Pheonix settings');\n    console.log('  help                       Display this help message');\n    console.log('Config Actions:');\n    console.log('  addPath <path>             Add a path to the configuration');\n    console.log('  removePath <path>          Remove a path from the configuration');\n    console.log('  addExcludePath <path>      Add a path to the exclude paths');\n    console.log('  removeExcludePath <path>   Remove a path from the exclude paths');\n    console.log('  addFileType <type>         Add a file type to the configuration');\n    console.log('  removeFileType <type>      Remove a file type from the configuration');\n    console.log('  addFileRegex <regex>       Add a file regex to the configuration');\n    console.log('  removeFileRegex <regex>    Remove a file regex from the configuration');\n    console.log('  setUseFileTypes <true|false> Set whether to use file types');\n    console.log('  setUseFileRegexs <true|false> Set whether to use file regexs');\n    console.log('  setUseCeaserCipher <true|false> Set whether to use Ceaser Cipher');\n    console.log('  setUseAesKey <true|false>  Set whether to use AES Key');\n    console.log('  setThreads <number>        Set the number of threads');\n    console.log('  setWhiteSpaceOffset <number> Set the white space offset');\n    console.log('  setForkDelay <number>      Set the fork delay');\n    console.log('  setForkExecutionDelay <number> Set the fork execution delay');\n    console.log('  setDebug <true|false>      Set the debug mode');\n    console.log('  setLocalPathReferences <true|false> Set whether to use local path references');\n    console.log('  setSelfTamperProof <true|false> Set whether to use self tamper proof');\n    console.log('  setSelfNpmTamperProof <true|false> Set whether to use self npm tamper proof');\n}\nexports.default = main_1.JohnsPheonixBox;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Config = void 0;\n/************************************************************************************************************************\n * Author: Johnathan Edward Brown                                                                                       *\n * Purpose: Configuration class for the CLI Pheonix application.                                                        *\n * Last Modified: 2024-10-14                                                                                            *\n * License: X11 License                                                                                                 *\n * Version: 1.0.0                                                                                                       *\n ************************************************************************************************************************/\nconst fs = __importStar(require(\"fs\"));\nclass Config {\n    constructor(configObject) {\n        this.configFilePath = 'configurable.json';\n        this.config = {\n            paths: [],\n            excludePaths: [],\n            fileTypes: [],\n            fileRegexs: [],\n            forkDelay: 1,\n            forkExecutionDelay: 1,\n            threads: 1,\n            useFileTypes: false,\n            useFileRegexs: false,\n            useCeaserCipher: false,\n            useAesKey: false,\n            debug: false,\n            whiteSpaceOffset: 0,\n            localPathReferences: false,\n            selfTamperProof: false,\n            selfNpmTamperProof: false, // Added here\n        };\n        if (configObject && this.validateConfig(configObject)) {\n            this.config = configObject;\n        }\n        else {\n            this.loadConfig();\n        }\n        this.paths = this.config.paths;\n        this.excludePaths = this.config.excludePaths;\n        this.fileTypes = this.config.fileTypes;\n        this.fileRegexs = this.config.fileRegexs;\n        this.useFileRegexs = this.config.useFileRegexs;\n        this.useFileTypes = this.config.useFileTypes;\n        this.useCeaserCipher = this.config.useCeaserCipher;\n        this.useAesKey = this.config.useAesKey;\n        this.forkDelay = this.config.forkDelay;\n        this.forkExecutionDelay = this.config.forkExecutionDelay;\n        this.threads = this.config.threads;\n        this.debug = this.config.debug;\n        this.whiteSpaceOffset = this.config.whiteSpaceOffset;\n        this.localPathReferences = this.config.localPathReferences;\n        this.selfTamperProof = this.config.selfTamperProof;\n        this.selfNpmTamperProof = this.config.selfNpmTamperProof; // Added here\n    }\n    log(message) {\n        if (this.debug) {\n            console.log(message);\n        }\n    }\n    saveConfig() {\n        if (this.validateConfig(this.config)) {\n            fs.writeFileSync(this.configFilePath, JSON.stringify(this.config, null, 2));\n            this.log('Configuration saved successfully.');\n        }\n        else {\n            console.error('Invalid configuration. Save aborted.');\n        }\n    }\n    validateConfig(config) {\n        if (!Array.isArray(config.paths))\n            return false;\n        if (!Array.isArray(config.excludePaths))\n            return false;\n        if (!Array.isArray(config.fileTypes))\n            return false;\n        if (!Array.isArray(config.fileRegexs))\n            return false;\n        if (typeof config.useFileTypes !== 'boolean')\n            return false;\n        if (typeof config.useFileRegexs !== 'boolean')\n            return false;\n        if (typeof config.useCeaserCipher !== 'boolean')\n            return false;\n        if (typeof config.useAesKey !== 'boolean')\n            return false;\n        if (typeof config.forkDelay !== 'number')\n            return false;\n        if (typeof config.forkExecutionDelay !== 'number')\n            return false;\n        if (typeof config.threads !== 'number')\n            return false;\n        if (typeof config.debug !== 'boolean')\n            return false;\n        if (typeof config.whiteSpaceOffset !== 'number')\n            return false;\n        if (typeof config.localPathReferences !== 'boolean')\n            return false;\n        if (typeof config.selfTamperProof !== 'boolean')\n            return false;\n        if (typeof config.selfNpmTamperProof !== 'boolean')\n            return false; // Added here\n        return true;\n    }\n    loadConfig() {\n        if (fs.existsSync(this.configFilePath)) {\n            const loadedConfig = JSON.parse(fs.readFileSync(this.configFilePath, 'utf-8'));\n            if (this.validateConfig(loadedConfig)) {\n                this.config = loadedConfig;\n                this.log('Configuration loaded successfully.');\n            }\n            else {\n                console.error('Invalid configuration file. Loading defaults.');\n                this.config = { paths: [], excludePaths: [], fileTypes: [], fileRegexs: [], useFileTypes: false, useFileRegexs: false, useCeaserCipher: false, useAesKey: false, debug: false, forkDelay: 1, forkExecutionDelay: 1, threads: 1, whiteSpaceOffset: 0, localPathReferences: false, selfTamperProof: false, selfNpmTamperProof: false };\n            }\n        }\n        else {\n            this.config = { paths: [], excludePaths: [], fileTypes: [], fileRegexs: [], useFileTypes: false, useFileRegexs: false, useCeaserCipher: false, useAesKey: false, debug: false, forkDelay: 1, forkExecutionDelay: 1, threads: 1, whiteSpaceOffset: 0, localPathReferences: false, selfTamperProof: false, selfNpmTamperProof: false };\n        }\n    }\n    saveConfigP() {\n        const config = {\n            paths: this.paths,\n            excludePaths: this.excludePaths,\n            fileTypes: this.fileTypes,\n            fileRegexs: this.fileRegexs,\n            useFileTypes: this.useFileTypes,\n            useFileRegexs: this.useFileRegexs,\n            useCeaserCipher: this.useCeaserCipher,\n            useAesKey: this.useAesKey,\n            forkDelay: this.forkDelay,\n            forkExecutionDelay: this.forkExecutionDelay,\n            threads: this.threads,\n            debug: this.debug,\n            whiteSpaceOffset: this.whiteSpaceOffset,\n            localPathReferences: this.localPathReferences,\n            selfTamperProof: this.selfTamperProof,\n            selfNpmTamperProof: this.selfNpmTamperProof, // Added here\n        };\n        if (this.validateConfig(config)) {\n            this.config = config;\n            this.saveConfig();\n        }\n        else {\n            console.error('Invalid configuration. Save aborted.');\n        }\n    }\n    addPath(path) {\n        if (!this.config.paths.includes(path)) {\n            this.config.paths.push(path);\n            this.saveConfig();\n            this.log(`Path ${path} added to configuration.`);\n        }\n    }\n    removePath(path) {\n        const index = this.config.paths.indexOf(path);\n        if (index > -1) {\n            this.config.paths.splice(index, 1);\n            this.saveConfig();\n            this.log(`Path ${path} removed from configuration.`);\n        }\n    }\n    addExcludePath(path) {\n        if (!this.config.excludePaths.includes(path)) {\n            this.config.excludePaths.push(path);\n            this.saveConfig();\n            this.log(`Exclude path ${path} added to configuration.`);\n        }\n    }\n    removeExcludePath(path) {\n        const index = this.config.excludePaths.indexOf(path);\n        if (index > -1) {\n            this.config.excludePaths.splice(index, 1);\n            this.saveConfig();\n            this.log(`Exclude path ${path} removed from configuration.`);\n        }\n    }\n    addFileType(fileType) {\n        if (!this.config.fileTypes.includes(fileType)) {\n            this.config.fileTypes.push(fileType);\n            this.saveConfig();\n            this.log(`File type ${fileType} added to configuration.`);\n        }\n    }\n    removeFileType(fileType) {\n        const index = this.config.fileTypes.indexOf(fileType);\n        if (index > -1) {\n            this.config.fileTypes.splice(index, 1);\n            this.saveConfig();\n            this.log(`File type ${fileType} removed from configuration.`);\n        }\n    }\n    addFileRegex(regex) {\n        if (!this.config.fileRegexs.includes(regex)) {\n            this.config.fileRegexs.push(regex);\n            this.saveConfig();\n            this.log(`File regex ${regex} added to configuration.`);\n        }\n    }\n    removeFileRegex(regex) {\n        const index = this.config.fileRegexs.indexOf(regex);\n        if (index > -1) {\n            this.config.fileRegexs.splice(index, 1);\n            this.saveConfig();\n            this.log(`File regex ${regex} removed from configuration.`);\n        }\n    }\n}\nexports.Config = Config;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JohnsPheonixBox = void 0;\n/************************************************************************************************************************\n * Author: Johnathan Edward Brown                                                                                       *\n * Purpose: Main entry point for the PheonixBox Class Object for the CLI Pheonix application.                           *\n * Last Modified: 2024-10-14                                                                                            *\n * License: X11 License                                                                                                 *\n * Version: 1.0.0                                                                                                       *\n ************************************************************************************************************************/\nconst config_1 = require(\"./config\");\nconst crypto = __importStar(require(\"crypto\"));\nconst fs = __importStar(require(\"fs\"));\nconst path = __importStar(require(\"path\"));\nconst sea = __importStar(require(\"node:sea\")); // Assuming 'sea' is a module for handling sea assets\nconst char_1 = require(\"./char\");\nconst cluster_1 = __importDefault(require(\"cluster\"));\nconst os = __importStar(require(\"os\"));\nconst cli_1 = require(\"./cli\");\nconst STATE_FILE_PATH = path.join(process.cwd(), 'pheonixBoxState.json');\nclass JohnsPheonixBox {\n    constructor(useSeaAsset = false, assetLocation = '') {\n        this.fileHashes = {};\n        this.fileContents = {};\n        this.cipherKey = '';\n        this.shuffledKey = '';\n        this.safeAsciiCharacters = [];\n        this.aesKey = null;\n        this.loaded = false;\n        if (useSeaAsset && assetLocation) {\n            this.config = this.loadConfigFromSeaAsset(assetLocation);\n        }\n        else {\n            this.config = new config_1.Config();\n            this.config.saveConfigP();\n            this.loadState();\n        }\n        this.log('Initializing JohnsPheonixBox...');\n        console.log('This loaded:', this.loaded);\n        if (this.loaded === false) {\n            this.safeAsciiCharacters = (0, char_1.generateSafeUtf8Characters)(this.config.whiteSpaceOffset);\n            this.cipherKey = this.generateCipherKey();\n            this.shuffledKey = this.cipherKey;\n            if (this.config.useAesKey) {\n                this.aesKey = crypto.randomBytes(32); // Use 256-bit key size\n            }\n        }\n        process.on('exit', (code) => {\n            if (code !== 369) {\n                if (cli_1.clusterLock.clusterLock === false)\n                    this.saveState();\n            }\n        });\n        process.on('SIGINT', () => {\n            if (cli_1.clusterLock.clusterLock === false)\n                this.saveState();\n            process.exit(369);\n        });\n        this.log('JohnsPheonixBox initialized with config:', this.config);\n    }\n    log(...args) {\n        if (this.config.debug) {\n            console.log(...args);\n        }\n    }\n    loadConfigFromSeaAsset(assetLocation) {\n        console.log('Loading config from sea asset:', assetLocation);\n        const arrayBuffer = sea.getAsset(assetLocation);\n        const configString = Buffer.from(arrayBuffer.toString()).toString('utf8');\n        console.log('Loaded config from sea asset:', configString);\n        return JSON.parse(configString);\n    }\n    loadState() {\n        console.log('Loading state from file:', STATE_FILE_PATH);\n        if (fs.existsSync(STATE_FILE_PATH)) {\n            const state = JSON.parse(fs.readFileSync(STATE_FILE_PATH, 'utf-8'));\n            this.cipherKey = state.cipherKey;\n            this.shuffledKey = state.shuffledKey;\n            this.fileHashes = state.fileHashes;\n            this.fileContents = state.fileContents;\n            if (this.config.useAesKey && state.aesKey) {\n                this.aesKey = Buffer.from(state.aesKey, 'hex');\n            }\n            fs.unlinkSync(STATE_FILE_PATH); // Delete the state file after loading\n            this.log('Loaded state:', state);\n            this.loaded = true;\n        }\n    }\n    saveState() {\n        this.log('Saving state to file:', STATE_FILE_PATH);\n        const state = {\n            cipherKey: this.cipherKey,\n            shuffledKey: this.shuffledKey,\n            fileHashes: this.fileHashes,\n            fileContents: this.fileContents\n        };\n        if (this.config.useAesKey && this.aesKey) {\n            state.aesKey = this.aesKey.toString('hex');\n        }\n        fs.writeFileSync(STATE_FILE_PATH, JSON.stringify(state), 'utf-8');\n        this.log('Saved state:', state);\n    }\n    startProcess() {\n        if (cluster_1.default.isPrimary) {\n            let numCPUs = os.cpus().length;\n            if (numCPUs > this.config.threads)\n                numCPUs = this.config.threads; // If configurations for threads is lower than the numCpu threads use that!\n            const fileList = this.getFileList();\n            const chunkSize = Math.ceil(fileList.length / numCPUs);\n            this.log(`Master ${process.pid} is running, using ${numCPUs} threads with chunk size ${chunkSize}`);\n            // Fork workers.\n            let i = 0;\n            const forkWorker = () => {\n                if (i < numCPUs) {\n                    const chunk = fileList.slice(i * chunkSize, (i + 1) * chunkSize);\n                    const worker = cluster_1.default.fork();\n                    worker.on('message', (message) => {\n                        if (message.type === 'result') {\n                            this.log(`Master received result from worker ${worker.process.pid}`);\n                            Object.assign(this.fileHashes, message.fileHashes);\n                            Object.assign(this.fileContents, message.fileContents);\n                        }\n                    });\n                    worker.send({ type: 'start', chunk, config: this.config, cipherKey: this.cipherKey, shuffledKey: this.shuffledKey, aesKey: this.aesKey, loaded: this.loaded, fileHashes: this.fileHashes, fileContents: this.fileContents });\n                    i++;\n                    setTimeout(forkWorker, this.config.forkDelay || 100); // Add a configurable delay between forks\n                }\n            };\n            while (i < numCPUs) {\n                forkWorker();\n            }\n            cluster_1.default.on('exit', (worker, code, signal) => {\n                this.log(`Worker ${worker.process.pid} died`);\n                i = i - 1;\n            });\n        }\n    }\n    getFileList() {\n        this.log('Generating file list...');\n        const fileList = [];\n        const excludePaths = this.config.excludePaths || [];\n        this.config.paths.forEach((filePath) => {\n            if (this.config.localPathReferences) {\n                filePath = path.join(__dirname, filePath);\n            }\n            if (fs.existsSync(filePath)) {\n                const stat = fs.statSync(filePath);\n                if (stat.isDirectory()) {\n                    fs.readdirSync(filePath).forEach(file => {\n                        const fullPath = path.join(filePath, file);\n                        if (!excludePaths.includes(fullPath)) {\n                            fileList.push(fullPath);\n                        }\n                    });\n                }\n                else {\n                    if (!excludePaths.includes(filePath)) {\n                        fileList.push(filePath);\n                    }\n                }\n            }\n        });\n        if (this.config.selfTamperProof) {\n            if (fs.existsSync(path.join(__dirname, __filename))) {\n                fileList.push(path.join(__dirname, __filename));\n            }\n            else {\n                if (fs.existsSync(path.join(process.cwd(), __filename))) {\n                    fileList.push(path.join(process.cwd(), __filename));\n                }\n            }\n        }\n        if (this.config.selfNpmTamperProof) {\n            fileList.push(__dirname);\n            const npmModulesPath = path.join(__dirname, 'node_modules');\n            if (fs.existsSync(npmModulesPath)) {\n                fileList.push(npmModulesPath);\n            }\n        }\n        this.log('Generated file list:', fileList);\n        return fileList;\n    }\n    generateCipherKey() {\n        this.log('Generating cipher key...');\n        const alphabet = this.safeAsciiCharacters;\n        const array = this.shuffleKeys(alphabet);\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = crypto.randomInt(0, i + 1);\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n        const cipherKey = array.join('');\n        //        this.log('Generated cipher key:', cipherKey);\n        return cipherKey;\n    }\n    shuffleKeys(array) {\n        this.log('Shuffling key...');\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = crypto.randomInt(0, i + 1);\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n        return array;\n    }\n    shuffleKey(key) {\n        this.log('Shuffling key...');\n        const array = key.split('');\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = crypto.randomInt(0, i + 1);\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n        const shuffledKey = array.join('');\n        //        this.log('Shuffled key:', shuffledKey);\n        return shuffledKey;\n    }\n}\nexports.JohnsPheonixBox = JohnsPheonixBox;\n//const johnsPheonixBox = new JohnsPheonixBox();\n//johnsPheonixBox.startProcess();\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n * Author: Johnathan Edward Brown\n * Purpose: Worker class for the PheonixBox Class Object for the CLI Pheonix application.\n * Last Modified: 2024-10-14\n * License: X11 License\n * Version: 1.0.0\n */\n/************************************************************************************************************************\n * Author: Johnathan Edward Brown                                                                                       *\n * Purpose: Worker class for the PheonixBox Class Object for the CLI Pheonix application.                               *\n * Last Modified: 2024-10-14                                                                                            *\n * License: X11 License                                                                                                 *\n * Version: 1.0.0                                                                                                       *\n ************************************************************************************************************************/\nconst fs = __importStar(require(\"fs\"));\nconst crypto = __importStar(require(\"crypto\"));\nconst path = __importStar(require(\"path\"));\nclass JohnsWorker {\n    constructor(config, fileList, chunks, cipherKey, shuffledKey, aesKey, loaded, fileHashes, fileContents) {\n        this.config = config;\n        this.loaded = loaded;\n        this.fileHashes = fileHashes || {};\n        this.fileContents = fileContents || {};\n        this.cipherKey = cipherKey;\n        this.shuffledKey = shuffledKey;\n        this.aesKey = aesKey;\n        this.processFiles(fileList, chunks);\n    }\n    log(...args) {\n        if (this.config.debug) {\n            console.log(...args);\n        }\n    }\n    encrypt(text) {\n        this.log('Encrypting text...');\n        const caesarEncrypted = text.split('').map(char => {\n            const index = this.cipherKey.indexOf(char);\n            if (index === -1) {\n                return char;\n            }\n            return this.shuffledKey[index];\n        }).join('');\n        if (this.config.useAesKey && this.aesKey) {\n            const iv = crypto.randomBytes(16); // Initialization vector\n            const cipher = crypto.createCipheriv('aes-256-cbc', Buffer.from(this.aesKey), iv);\n            let encrypted = cipher.update(caesarEncrypted, 'utf8', 'hex');\n            encrypted += cipher.final('hex');\n            const encryptedWithIv = iv.toString('hex') + ':' + encrypted;\n            this.log('Encrypted text with AES:', encryptedWithIv);\n            return encryptedWithIv;\n        }\n        this.log('Encrypted text with Caesar cipher:', caesarEncrypted);\n        return caesarEncrypted;\n    }\n    decrypt(text) {\n        this.log('Decrypting text...');\n        let decrypted = text;\n        if (this.config.useAesKey && this.aesKey) {\n            const textParts = text.split(':');\n            if (textParts.length < 2) {\n                throw new Error('Invalid encrypted text format');\n            }\n            const iv = Buffer.from(textParts.shift(), 'hex');\n            if (iv.length !== 16) { // AES-256-CBC requires a 16-byte IV\n                throw new Error('Invalid initialization vector length');\n            }\n            const encryptedText = textParts.join(':');\n            const key = this.config.useCeaserCipher ? Buffer.from(this.aesKey) : this.aesKey;\n            const decipher = crypto.createDecipheriv('aes-256-cbc', key, iv);\n            decrypted = decipher.update(encryptedText, 'hex', 'utf8');\n            decrypted += decipher.final('utf8');\n        }\n        const caesarDecrypted = decrypted.split('').map(char => {\n            const index = this.shuffledKey.indexOf(char);\n            if (index === -1) {\n                return char;\n            }\n            return this.cipherKey[index];\n        }).join('');\n        this.log('Decrypted text with Caesar cipher:', caesarDecrypted);\n        return caesarDecrypted;\n    }\n    processFiles(fileList, chunks) {\n        return new Promise((resolve, reject) => {\n            try {\n                this.log('Processing files...');\n                fileList.forEach(filePath => {\n                    this.processFile(filePath, chunks);\n                });\n                resolve({\n                    fileHashes: this.fileHashes,\n                    fileContents: this.fileContents\n                });\n            }\n            catch (error) {\n                reject(error);\n            }\n        });\n    }\n    processFile(filePath, chunks) {\n        this.log('Processing file:', filePath);\n        if (this.shouldProcessFile(filePath)) {\n            const fileContent = fs.readFileSync(filePath, 'utf-8');\n            const fileHash = crypto.createHash('sha256').update(fileContent).digest('hex');\n            if (this.fileHashes[filePath] !== undefined && this.fileContents[filePath] !== undefined) {\n                const storedHash = this.config.useCeaserCipher ? this.decrypt(this.fileHashes[filePath]) : this.fileHashes[filePath];\n                const storedContent = this.config.useCeaserCipher ? this.decrypt(this.fileContents[filePath]) : this.fileContents[filePath];\n                if (!storedHash) {\n                    this.fileHashes[filePath] = this.config.useCeaserCipher ? this.encrypt(fileHash) : fileHash;\n                    this.fileContents[filePath] = this.config.useCeaserCipher ? this.encrypt(fileContent) : fileContent;\n                }\n                else if (storedHash !== fileHash) {\n                    this.log(`File hash mismatch for ${filePath}. Replacing content with stored content. , ${storedContent} \\n, ${fileContent}`);\n                    fs.writeFileSync(filePath, storedContent, 'utf-8');\n                }\n            }\n            else {\n                this.fileHashes[filePath] = this.config.useCeaserCipher ? this.encrypt(fileHash) : fileHash;\n                this.fileContents[filePath] = this.config.useCeaserCipher ? this.encrypt(fileContent) : fileContent;\n            }\n        }\n    }\n    shouldProcessFile(filePath) {\n        var _a, _b, _c;\n        this.log('Checking if file should be processed:', filePath);\n        if ((_a = this.config.excludePaths) === null || _a === void 0 ? void 0 : _a.some(excludePath => filePath.startsWith(excludePath))) {\n            this.log(`File ${filePath} is excluded from processing.`);\n            return false;\n        }\n        if (this.config.useFileTypes) {\n            const fileExtension = path.extname(filePath);\n            if (!((_b = this.config.fileTypes) === null || _b === void 0 ? void 0 : _b.includes(fileExtension))) {\n                return false;\n            }\n        }\n        if (this.config.useFileRegexs) {\n            const fileName = path.basename(filePath);\n            if (!((_c = this.config.fileRegexs) === null || _c === void 0 ? void 0 : _c.some(regex => new RegExp(regex).test(fileName)))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    terminate() {\n        // Implementation of worker termination\n        console.log('Worker terminating...');\n        process.exit(0);\n        console.log('Worker terminated');\n    }\n}\nexports.default = JohnsWorker;\n","module.exports = require(\"cluster\");","module.exports = require(\"crypto\");","module.exports = require(\"fs\");","module.exports = require(\"node:sea\");","module.exports = require(\"os\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/cli.ts\");\n"],"names":["Object","defineProperty","exports","value","generateSafeUtf8Characters","count","excludedCharacters","safeCharacters","i","char","String","fromCodePoint","includes","trim","length","push","aesSafeCharacters","filter","charCodeAt","console","log","join","generateSafeUtf8CharactersForAES","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","clusterLock","config_1","main_1","cluster_1","worker_1","default","isWorker","process","pid","on","message","type","chunk","config","cipherKey","shuffledKey","aesKey","loaded","fileHashes","fileContents","worker","Buffer","alloc","processFiles","send","setTimeout","forkExecutionDelay","args","argv","slice","displayHelp","exit","command","action","options","Config","addPath","removePath","addFileType","removeFileType","addFileRegex","removeFileRegex","useFileTypes","saveConfigP","useFileRegexs","useCeaserCipher","useAesKey","threads","parseInt","debug","whiteSpaceOffset","addExcludePath","removeExcludePath","forkDelay","localPathReferences","selfTamperProof","selfNpmTamperProof","error","handleConfig","JohnsPheonixBox","startProcess","__createBinding","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","writable","configurable","enumerable","get","__setModuleDefault","v","__importStar","prototype","hasOwnProperty","call","fs","constructor","configObject","configFilePath","paths","excludePaths","fileTypes","fileRegexs","validateConfig","loadConfig","saveConfig","writeFileSync","JSON","stringify","Array","isArray","existsSync","loadedConfig","parse","readFileSync","path","index","indexOf","splice","fileType","regex","crypto","sea","char_1","os","cli_1","STATE_FILE_PATH","cwd","useSeaAsset","assetLocation","safeAsciiCharacters","loadConfigFromSeaAsset","loadState","generateCipherKey","randomBytes","code","saveState","arrayBuffer","getAsset","configString","from","toString","state","unlinkSync","isPrimary","numCPUs","cpus","fileList","getFileList","chunkSize","Math","ceil","forkWorker","fork","assign","signal","forEach","filePath","__dirname","statSync","isDirectory","readdirSync","file","fullPath","__filename","npmModulesPath","alphabet","array","shuffleKeys","j","randomInt","shuffleKey","key","split","chunks","encrypt","text","caesarEncrypted","map","iv","cipher","createCipheriv","encrypted","update","final","encryptedWithIv","decrypt","decrypted","textParts","Error","shift","encryptedText","decipher","createDecipheriv","caesarDecrypted","processFile","shouldProcessFile","fileContent","fileHash","createHash","digest","storedHash","storedContent","_a","_b","_c","some","excludePath","startsWith","fileExtension","extname","fileName","basename","RegExp","test","terminate","module","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}